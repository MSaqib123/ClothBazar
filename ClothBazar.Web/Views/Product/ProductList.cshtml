@model IEnumerable<Product>

@{
    ViewBag.Title = "ProductList";
}

@*<div id="tableContainer">*@
<br />
<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Products
            </h2>
        </div><!-- /.title-section -->
    </div><!-- /.col-md-12 -->
</div>

<div class="row">
    <div class="col-lg-10">
        <form method="get">
            <div class="row">
                <div class="col-4">
                    <input type="text" id="txtSearch" placeholder="Search"/>
                </div>
                <div>
                    <button type="button" class="mt-1" id="btnSearch">Search</button>
                </div>
            </div>
        </form>
    </div>
    <br />
    <div class="col-lg-2">
        <p>
            <button class="bg-primary" id="newBtn">New Product</button>
        </p>
    </div>
</div>



<br />

<table class="table">
    <tr>
        <th width="5%">
            Id
        </th>
        <th>
            Image
        </th>
        <th width="10%">
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th width="10%">
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th width="30%">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th width="10%">
            Category
        </th>
        <th>
            IsFeatured
        </th>
        <th width="20%"></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.Id
            </td>
            <td>
                @if (item.ImageURL != null)
                {
                    <img src="@Url.Content(item.ImageURL)" width="60" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if (item.Category != null)
                {
                    @Html.DisplayFor(modelItem => item.Category.Name)
                }
                else
                {
                    <p>-</p>
                }
            </td>
            <td>
                <label>@(item.isFeatured ? "Yes" : "No")</label>
            </td>
            <td>
                <button type="button" class="btn-sm bg-primary editBtn" data-id="@item.Id">Edit</button> |
                <button type="button" class="btn-sm bg-danger  deleteBtn" data-id="@item.Id">Delete</button> |
                <button type="button" class="btn-sm bg-success addToCartBtn" data-id="@item.Id">ATC</button>
            </td>
        </tr>
    }

</table>

<br />
<br />
@*</div>

    <div id="newForm">

    </div>*@

<script>
    //__________________ Search _____________
    $("#btnSearch").click(function () {
        var searchVal = $("#txtSearch").val();
        @*alert(searchVal);*@

        $.ajax({
            url: "/Product/ProductList",
            data: { search: searchVal }
        })
        .done(function (response) {
        @*alert("working good");*@
            @*alert(response);*@
            $("#tableContainer").html(response);
        })
        .fail(function () {
            alert("fail");
        })
    })


    //__________________ show create form ______________________
    $("#newBtn").click(function () {
        $.ajax({
            url: "/Product/Create/",
        })
        .done(function (response) {
            @*alert(response);*@
            $("#newForm").html(response);
            focusAction();
        })
        .fail(function () {
            alert("fail");
        })
    })


    //__________________ show Edit form ______________________
    $(".editBtn").click(function () {
        @*alert($(this).attr("data-id"));*@
        debugger;
        var pid = $(this).attr("data-id");
        $.ajax({
            url: "/Product/Edit/",
            data: {
                id: pid
            }
        })
        .done(function (response) {
            @*alert(response);*@
            $("#newForm").html(response);
            focusAction();
        })
        .fail(function () {
            alert("fail");
        })
    })

    //__________________ Auto Scrole on Show  Edit,Create Form ______________________
    function focusAction() {
        $('html,body').animate({
            scrollTop: $("#newForm").offset().top - 100
        }, 1000)
    }

    //__________________ Delete Record ______________________
    $(".deleteBtn").click(function () {
        @* alert($(this).attr("data-id"));*@
        var id = $(this).attr("data-id");
        var isDeleted = false; 

        //sweetAlert
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert Record!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                isDeleted = true;
                deleteRecord(isDeleted,id);
                @*Swal.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success'
                )*@
            }
        })
    })
    function deleteRecord(isDeleted,id){
        //Alert 
        @*var r = confirm("Do u want to delet ??");*@
        if (isDeleted == true) {
            $.ajax({
                type: "Post",
                url: "/Product/Delete/",
                data: {
                    id: id
                }
            })
            .done(function (response) {
                @* alert(response);*@
                $("#tableContainer").html(response);
                @*alert("Deleted Successfuly")*@

                Swal.fire(
                    'Deleted!',
                    'Your Record has been deleted.',
                    'success'
                )
            })
            .fail(function () {
                Swal.fire(
                    'Error!',
                    'Record Not delete.',
                    'error'
                )
            })
        }
    }


    //__________________ AddToCart Product ______________________
    var list = [];
    $(".addToCartBtn").click(function () {
        var productId = $(this).attr("data-id");
        list.push(productId);
        $.cookie('CartProducts', list.join('-'), { path: '/' });

        @*alert("Added to Cart");*@

        //________ SweetAlert Toaster _________
        const Toast = Swal.mixin({
            toast: true,
            position: 'top',
            background: '#FF6D60',//'#fff',
            color:'#fff',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })
        Toast.fire({
            icon: 'success',
            title: 'Add ToCart Successfully'
        })
    })
</script>