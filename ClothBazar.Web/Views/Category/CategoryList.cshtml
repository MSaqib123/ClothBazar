@model  ClothBazar.Web.ViewModel.CategorySearchVM

@{
    ViewBag.Title = "Index";
}

<br />
<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Categories
            </h2>
        </div><!-- /.title-section -->
    </div><!-- /.col-md-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <form id="searchForm">
            <div class="row">
                <div class="col-8">
                    <input type="text" id="txtSearch" placeholder="Search" value="@Model.SearchTerms" />
                </div>
                <div class="col-4">
                    <div class="d-flex justify-content-between">
                        <button type="button" class="mt-1 bg-primary" id="btnSearch">Search</button>
                        <button type="button" class="mt-1 bg-primary" id="reset">Reset</button>
                        <button type="button" class="mt-1" id="newBtn">New Product</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<br />


<table class="table table-hover table-striped">
    <tr>
        <th width="5%">
            Id
        </th>
        <td>
            Image
        </td>
        <th width="20%">
            Name
        </th>
        <th width="10%">
            TotalProduct
        </th>
        <th width="30%">
            Description
        </th>
        <th width="10%">
            IsFeatured
        </th>
        <th width="35%"></th>
    </tr>

    @foreach (var item in Model.CategoryList)
    {
        <tr>
            <td>
                @Html.DisplayFor(model => item.Id)
            </td>
            <td>
                @if (item.ImageURL != null)
                {
                    <img src="@Url.Content(item.ImageURL)" width="60" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <th>
                <p>@item.Products.Count</p><br />
                @foreach (var p in item.Products)
                {
                    @*<span>@p.Name ,</span>*@
                    <span>@p.Name</span>
                    if (p != item.Products.Last())
                    {<span>,</span>}
                }
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <label>@(item.isFeatured ? "Yes" : "No")</label>
            </td>
            <td>
                @if (User.IsInRole("Admin"))
                {
                    <button class="editBtn btn-sm bg-primary" data-id="@item.Id">Edit</button>
                    <button class="deleteBtn btn-sm" data-id="@item.Id">Delete</button>
                }
                else
                {
                    <label>UnAuthorized Action</label>
                }

            </td>
        </tr>
    }

</table>


<div class="blog-pagination clearfix">
    @* <ul class="flat-pagination">
            @{
                var totalPages = Model.TotalPages;
            }

            <li class="prev">
                <a href="#" class="pageButton" data-pageNo="@(Model.pageNo-1)"><i class="fa fa-angle-left"></i></a>
            </li>

            @for (int i = 0; i < totalPages; i++)
            {
                if (Model.pageNo == (i + 1))
                {
                    <li class="active">
                        <a href="#" class="pageButton" data-pageNo="@(i+1)">@(i+1)</a>
                    </li>
                }
                else
                {
                    <li>
                        <a href="#" class="pageButton" data-pageNo="@(i+1)">@(i+1)</a>
                    </li>
                }
            }

            <li>
                <a href="#" class="pageButton" data-pageNo="@(Model.pageNo+1)">
                    <i class="fa fa-angle-right"></i>
                </a>
            </li>
        </ul><!-- /.flat-pagination -->*@
    @*@if (Model.Pager != null)
    {*@
    <ul class="flat-pagination">
        @if (Model.Pager.CurrentPage > 1)
        {
            <li class="prev">
                <a href="#" class="pageButton" data-pageNo="@(Model.Pager.CurrentPage-1)"><i class="fa fa-angle-double-left"></i></a>
            </li>
            <li class="first">
                <a href="#" class="pageButton" data-pageNo="1"><i class="fa fa-angle-left"></i></a>
            </li>
        }
        @for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;
            <li class="@activeClass">
                <a href="#" class="pageButton" data-pageNo="@page">@page</a>
            </li>
        }


        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <li class="end">
                <a href="#" class="pageButton" data-pageNo="@(Model.Pager.EndPage)">
                    <i class="fa fa-angle-right"></i>
                </a>
            </li>
            <li class="">
                <a href="#" class="pageButton" data-pageNo="@(Model.Pager.CurrentPage+1)">
                    <i class="fa fa-angle-double-right"></i>
                </a>
            </li>
        }
    </ul>
    @*}*@
</div><!-- /.blog-pagination -->

<br />
<br />


<script>

    $("#searchForm").submit(function (e) {
        e.preventDefault();
    })

    //_________________________ Pagination _____________________
    $(".pageButton").click(function (e) {
        e.preventDefault();

        var searchVal = $("#txtSearch").val();
        // alert(searchVal);

        $.ajax({
            url: '@Url.Action("CategoryList", "Category")',
            data: {
                //search: searchVal
                pageNo: $(this).attr("data-pageNo"),
                search: '@Model.SearchTerms'//searchVal
            }
        })
        .done(function (response) {
            $("#tableContainer").html(response);
        })
        .fail(function () {
            alert("fail");
        })
    })

    //__________________ reset __________________
    $("#reset").click(function () {
        var searchVal = "";
        $.ajax({
            url: '@Url.Action("CategoryList", "Category")',//"/Product/ProductList",
            data: { search: searchVal }
        })
        .done(function (response) {
            $("#tableContainer").html(response);
            $("#txtSearch").val("");
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Search _____________________
    $("#btnSearch").click(function () {
        var searchVal = $("#txtSearch").val();

        @* alert(searchVal);*@

        $.ajax({
            type:'get',
            //__________ 1. Url Helper ___________
            url: '@Url.Action("CategoryList", "Category")',//"/Category/CategoryList",
            //__________ 2. Customize above URL ______________
            //1. goto RoutConfig

            data: { search: searchVal }
        })
        .done(function (response) {
            @* alert("working good");*@
        @*alert(response);*@
            $("#tableContainer").html(response);
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Create Show Form _____________________
    $("#newBtn").click(function () {
        $.ajax({
            type:"get",
            url: '@Url.Action("Create", "Category")',//"/Category/Create"
        })
        .done(function (response) {
            @* alert("working good");*@
            @* alert(response);*@
            $("#newForm").html(response);
            focusAction("newForm");
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Edit Show Form _____________________
    $(".editBtn").click(function () {
        var catId = $(this).attr("data-id");
        $.ajax({
            type:"get",
            url:'@Url.Action("Edit", "Category")',// "/Category/Edit",
            data: {id:catId}
        })
        .done(function (response) {
            @* alert("working good");*@
            @* alert(response);*@
            $("#newForm").html(response);

            focusAction("newForm");
        })
        .fail(function () {
            alert("fail");
        })
    })

  


    //_________________ Navigate to divForm _____________________
    $(".deleteBtn").click(function () {
        var id = $(this).attr("data-id");
        var isDeleted = false;

        //sweetAlert
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert Record!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                isDeleted = true;
                deleteRecord(isDeleted, id);
            }
        })
    })

    function deleteRecord(isDeleted, id)
    {
        if (isDeleted == true) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Category")',// "/Category/Delete",
                data: { id: id }
            })
            .done(function (response) {
                $("#tableContainer").html(response);
                Swal.fire(
                    'Deleted!',
                    'Your Record has been deleted.',
                    'success'
                )
            })
            .fail(function () {
                Swal.fire(
                    'Error!',
                    'Record Not delete.',
                    'error'
                )
            })
        }
    }

</script>

