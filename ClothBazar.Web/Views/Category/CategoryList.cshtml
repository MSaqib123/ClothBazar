@model IEnumerable<ClothBazar.Entities.Category>

@{
    ViewBag.Title = "Index";
}

    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="title-section">
                <h2 class="title">
                    Categories
                </h2>
            </div><!-- /.title-section -->
        </div><!-- /.col-md-12 -->
    </div>

    <div class="row">
        <div class="col-lg-10">
            <form>
                <div class="row">
                    <div class="col-4">
                        <input type="text" id="txtSearch" placeholder="search"/>
                    </div>
                    <div>
                        <button type="button" class="mt-1" id="btnSearch">Submit</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-lg-2">
            <p>
                <button class="bg-primary" id="newBtn">Create</button>
            </p>
        </div>
    </div>
    <br />


    <table class="table table-hover table-striped">
        <tr>
            <th width="5%">
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <td>
                Image
            </td>
            <th width="20%">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th width="10%">
                TotalProduct
            </th>
            <th width="30%">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th width="10%">
                @Html.DisplayNameFor(model => model.isFeatured)
            </th>
            <th width="35%"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.Id)
                </td>
                <td>
                    @if (item.ImageURL != null)
                    {
                        <img src="@Url.Content(item.ImageURL)" width="60" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <th>
                    <p>@item.Products.Count</p><br />
                    @foreach (var p in item.Products)
                    {
                        @*<span>@p.Name ,</span>*@
                        <span>@p.Name</span> 
                        if (p != item.Products.Last()) {<span>,</span>}
                    }
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <label>@(item.isFeatured ? "Yes" : "No")</label>
                </td>
                <td>
                    <button class="editBtn btn-sm bg-primary" data-id="@item.Id">Edit</button>
                    <button class="deleteBtn btn-sm" data-id="@item.Id">Delete</button>
                </td>
            </tr>
        }

    </table>

<br />
<br />


<script>

    //_________________ Search _____________________
    $("#btnSearch").click(function () {
        var searchVal = $("#txtSearch").val();
        
        @* alert(searchVal);*@

        $.ajax({
            type:'get',
            //__________ 1. Url Helper ___________
            url: '@Url.Action("CategoryList", "Category")',//"/Category/CategoryList",
            //__________ 2. Customize above URL ______________
            //1. goto RoutConfig

            data: { search: searchVal }
        })
        .done(function (response) {
            @* alert("working good");*@
        @*alert(response);*@
            $("#tableContainer").html(response);
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Create Show Form _____________________
    $("#newBtn").click(function () {
        $.ajax({
            type:"get",
            url: "/Category/Create"
        })
        .done(function (response) {
            @* alert("working good");*@
            @* alert(response);*@
            $("#newForm").html(response);
            focusAction();
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Edit Show Form _____________________
    $(".editBtn").click(function () {
        var catId = $(this).attr("data-id");
        $.ajax({
            type:"get",
            url: "/Category/Edit",
            data: {id:catId}
        })
        .done(function (response) {
            @* alert("working good");*@
            @* alert(response);*@
            $("#newForm").html(response);

            focusAction();
        })
        .fail(function () {
            alert("fail");
        })
    })

    //_________________ Navigate to divForm _____________________
    function focusAction() {
        $('html,body').animate({
            scrollTop: $("#newForm").offset().top - 100
        },1000)
    }

    //_________________ Navigate to divForm _____________________
    $(".deleteBtn").click(function () {
        var id = $(this).attr("data-id");
        var isDeleted = false; 

        //sweetAlert
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert Record!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                isDeleted = true;
                deleteRecord(isDeleted, id);
            }
        })
    })

    function deleteRecord(isDeleted, id)
    {
        if (isDeleted == true) {
            $.ajax({
                type: "POST",
                url: "/Category/Delete",
                data: { id: id }
            })
            .done(function (response) {
                $("#tableContainer").html(response);
                Swal.fire(
                    'Deleted!',
                    'Your Record has been deleted.',
                    'success'
                )
            })
            .fail(function () {
                Swal.fire(
                    'Error!',
                    'Record Not delete.',
                    'error'
                )
            })
        }
    }

</script>

